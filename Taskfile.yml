version: "3"

vars:
  COMPOSE_FILE_NAME: docker-compose.yml

tasks:
  build:
    desc: Builds the app so it can be deployed in production.
    cmds:
      - pnpm run build
    sources:
      - src/**/*.[ts, svelte]
    generates:
      - build

  docker:start:
    internal: true
    cmds:
      - docker compose pull
      - docker compose -f {{.COMPOSE_FILE_NAME}} up --build -d

  start:
    desc: Starts the development server.
    deps:
      - docker:start
    cmds:
      - pnpm run dev --host --port 5173 --open

  lint:
    desc: Runs the linter to check for import order, unused variables etc.
    cmds:
      - pnpm run lint

  lint:fix:
    desc: Runs the linter which will also fix any issues it can such as import order.
    cmds:
      - pnpm run lint --fix

  format:
    desc: Runs the code formatter to check for any formatting issues.
    cmds:
      - pnpm run format:check

  format:fix:
    desc: Runs the code formatter, will fix any issues it finds.
    cmds:
      - pnpm run format

  check:
    desc: Runs the check tool, checking for things like incorrect types.
    cmds:
      - pnpm run check

  tests:unit:
    desc: Runs all the unit tests.
    cmds:
      - pnpm run test:unit

  coverage:
    desc: Runs all the unit tests with code coverage reports.
    cmds:
      - pnpm run coverage

  tests:e2e:
    desc: Runs all the e2e tests with code coverage reports.
    deps:
      - task: docker:start
        vars: { COMPOSE_FILE_NAME: tests/docker-compose.test.yml }
    cmds:
      - pnpm run test {{.CLI_ARGS}}
    env:
      NODE_ENV: test
      VITE_COVERAGE: true
      VITE_POCKET_BASE_URL: "http://localhost:9090"
      VITE_TEST_POCKET_BASE_URL: "http://localhost:9090"
      PLAYWRIGHT_JUNIT_OUTPUT_NAME: results.xml

  types:generate:
    desc: Generates the types for the API client.
    cmds:
      - npx pocketbase-typegen --db tests/pb_data/data.db --out src/lib/client/types.ts

  types:update:
    desc: Updates the types automatically generated by SvelteKit.
    cmds:
      - pnpm run sync

  prod:preview:
    desc: Previews the production deployment of the app.
    deps:
      - docker:start
      - build
    cmds:
      - pnpm run preview --host
